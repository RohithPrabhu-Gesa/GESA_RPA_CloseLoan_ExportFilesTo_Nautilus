<Activity mc:Ignorable="sap sap2010" x:Class="ProcessTransaction" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_CadenceBrowser" Type="InArgument(ui:Browser)" />
    <x:Property Name="in_HostName" Type="InArgument(x:String)" />
    <x:Property Name="in_ProcessStartTime" Type="InArgument(s:DateTime)" />
    <x:Property Name="in_FilePath" Type="InArgument(x:String)" />
    <x:Property Name="out_SqlId" Type="OutArgument(x:String)" />
  </x:Members>
  <this:ProcessTransaction.in_HostName>
    <InArgument x:TypeArguments="x:String" />
  </this:ProcessTransaction.in_HostName>
  <this:ProcessTransaction.in_ProcessStartTime>
    <InArgument x:TypeArguments="s:DateTime" />
  </this:ProcessTransaction.in_ProcessStartTime>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>817,2896</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="21">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="19">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: In this file all other process specific files will be invoked. If an application exception occurs, the current transaction can be retried. If a BRE is thrown, the transaction will be skipped. Can be a flowchart or sequence. " DisplayName="ProcessTransaction" sap:VirtualizedContainerService.HintSize="797,2836" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="LoanNumber" />
      <Variable x:TypeArguments="x:String" Name="RequestedBy" />
      <Variable x:TypeArguments="x:String" Name="RequestedDateTime" />
      <Variable x:TypeArguments="x:String" Name="BorrowerName" />
      <Variable x:TypeArguments="x:String" Name="BorrowerId" />
      <Variable x:TypeArguments="x:String" Name="BorrowerEmail" />
      <Variable x:TypeArguments="x:String" Name="SqlLoanId" />
      <Variable x:TypeArguments="x:String" Name="FirstName" />
      <Variable x:TypeArguments="x:String" Name="LastName" />
      <Variable x:TypeArguments="x:String" Name="DMINumber" />
      <Variable x:TypeArguments="x:String" Name="DownloadedFilePath" />
      <Variable x:TypeArguments="x:Boolean" Name="IsDownloadSuccessful" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Cadence_NavigateTo workflow" sap:VirtualizedContainerService.HintSize="755,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Cadence\Cadence_NavigateTo.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="ui:Browser" x:Key="in_CadenceBrwser">[in_CadenceBrowser]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_NavigateTo">pipeline</InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_LoanId">0</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Assign DisplayName="Assign loanNumber" sap:VirtualizedContainerService.HintSize="755,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[LoanNumber]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Loan Number").ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="755,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Processing Loan Number - &quot;+LoanNumber]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <Assign DisplayName=" Assign requestedBy" sap:VirtualizedContainerService.HintSize="755,60" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[RequestedBy]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("RequestedBy").ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign RequestedDateTime" sap:VirtualizedContainerService.HintSize="755,60" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[RequestedDateTime]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("RequestedDate").ToString]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Cadence_NavigateTo workflow" sap:VirtualizedContainerService.HintSize="755,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Cadence\Cadence_NavigateTo.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="ui:Browser" x:Key="in_CadenceBrwser">[in_CadenceBrowser]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_NavigateTo">loan summary</InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_LoanId">[CInt(LoanNumber)]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Cadence_ReadBorrowerDetails workflow" sap:VirtualizedContainerService.HintSize="755,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Cadence\Cadence_ReadBorrowerDetails.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_HostName">[in_HostName]</InArgument>
        <InArgument x:TypeArguments="s:DateTime" x:Key="in_ProcessStartTime">[in_ProcessStartTime]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_Email">[BorrowerEmail]</OutArgument>
        <OutArgument x:TypeArguments="ui:Browser" x:Key="out_BrowserVarCadence" />
        <OutArgument x:TypeArguments="x:String" x:Key="out_BorrowerName">[BorrowerName]</OutArgument>
        <InArgument x:TypeArguments="ui:Browser" x:Key="in_Browser">[in_CadenceBrowser]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SQL_Log_Borrower workflow" sap:VirtualizedContainerService.HintSize="755,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="SQL\SQL_Log_Borrower.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_BorrowerName">[BorrowerName]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_CreatedBy">[in_HostName]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_EmailID">[BorrowerEmail]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_ModifiedBy">[in_HostName]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_BorrowerID">[BorrowerId]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_DbName">[in_Config("DbName").ToString]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SQL_ProcessorLoanUpdate workflow" sap:VirtualizedContainerService.HintSize="755,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="SQL\SQL_ProcessorLoanUpdate.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_BorrowerID">[Cint(BorrowerId)]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_LoanNumber">[LoanNumber]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Processor">[String.Empty]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Underwritter">[String.Empty]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Conditioner">[String.Empty]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Funding">[String.Empty]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Closing">[String.Empty]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_CreatedBy">[in_HostName]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_ModifiedBy">[in_HostName]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_LoanID">[SqlLoanId]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_DbName">[in_Config("DbName").ToString]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <Assign DisplayName="Assign Sql id" sap:VirtualizedContainerService.HintSize="755,60" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[out_SqlId]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[SqlLoanId]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SQL_ProcessingUpdate workflow" sap:VirtualizedContainerService.HintSize="755,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="SQL\SQL_ProcessingUpdate.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_LoanID">[Cint(SqlLoanId)]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_ChildProcess">Extract borrower details</InArgument>
        <InArgument x:TypeArguments="x:Boolean" x:Key="in_Success">True</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Reason">["Extacted Borrower Details, Borrower Name : "+BorrowerName+", Borrower Email : "+BorrowerEmail]</InArgument>
        <InArgument x:TypeArguments="s:DateTime" x:Key="in_ProcessStartTime">[in_ProcessStartTime]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Comments">[String.Empty]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_CreatedBy">[in_HostName]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_ParentProcess">[in_Config("ProcessName").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_DbName">[in_Config("DbName").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_RequestedBy">[RequestedBy]</InArgument>
        <InArgument x:TypeArguments="s:DateTime" x:Key="in_RequestedDateTime">[Convert.ToDateTime(RequestedDateTime)]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Cadence_ExtractName workflow" sap:VirtualizedContainerService.HintSize="755,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="Cadence\Cadence_ExtractName.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="ui:Browser" x:Key="in_CadenceBrwsr">[in_CadenceBrowser]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_FirstName">[FirstName]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_LastName">[LastName]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_SqlId">[SqlLoanId]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Cadence_NavigateToVLF workflow" sap:VirtualizedContainerService.HintSize="755,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Cadence\Cadence_NavigateToVLF.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_SqlID">[SqlLoanId]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Cadence_DownloadFromVLF workflow" sap:VirtualizedContainerService.HintSize="755,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Cadence\Cadence_DownloadFromVLF.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="x:Boolean" x:Key="out_IsPDFDownloaded">[IsDownloadSuccessful]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_DownloadedFilePath">[DownloadedFilePath]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_FolderPath">[in_FilePath]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_FileName">[If(String.IsNullOrEmpty(LastName),FirstName,LastName)+" "+LoanNumber+" Full File.pdf"]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_SqlID">[SqlLoanId]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="755,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Is Download Successful : &quot;+IsDownloadSuccessful.ToString]" />
    <If Condition="[IsDownloadSuccessful]" DisplayName="If downloaded successfully" sap:VirtualizedContainerService.HintSize="755,389" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SQL_ProcessingUpdate workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="SQL\SQL_ProcessingUpdate.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:Int32" x:Key="in_LoanID">[Cint(SqlLoanId)]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_ChildProcess">Export files from VLF</InArgument>
            <InArgument x:TypeArguments="x:Boolean" x:Key="in_Success">True</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_Reason">Files are exported from VLF</InArgument>
            <InArgument x:TypeArguments="s:DateTime" x:Key="in_ProcessStartTime">[in_ProcessStartTime]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_Comments">["Path : "+DownloadedFilePath]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_CreatedBy">[in_HostName]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_ParentProcess">[in_Config("ProcessName").ToString]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_DbName">[in_Config("DbName").ToString]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_RequestedBy">[RequestedBy]</InArgument>
            <InArgument x:TypeArguments="s:DateTime" x:Key="in_RequestedDateTime">[Convert.ToDateTime(RequestedDateTime)]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="376,241" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SQL_ProcessingUpdate workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="SQL\SQL_ProcessingUpdate.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <InArgument x:TypeArguments="x:Int32" x:Key="in_LoanID">[Cint(SqlLoanId)]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_ChildProcess">Export files from VLF</InArgument>
              <InArgument x:TypeArguments="x:Boolean" x:Key="in_Success">False</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_Reason">Files are not exists in VLF or Failed to export files from VLF</InArgument>
              <InArgument x:TypeArguments="s:DateTime" x:Key="in_ProcessStartTime">[in_ProcessStartTime]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_Comments">[String.Empty]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_CreatedBy">[in_HostName]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_ParentProcess">[in_Config("ProcessName").ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_DbName">[in_Config("DbName").ToString]</InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="in_RequestedBy">[RequestedBy]</InArgument>
              <InArgument x:TypeArguments="s:DateTime" x:Key="in_RequestedDateTime">[Convert.ToDateTime(RequestedDateTime)]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <Throw DisplayName="Throw B.E" Exception="[New BusinessRuleException(&quot;Unable to Download files from VLF&quot;)]" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
        </Sequence>
      </If.Else>
    </If>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Cadence_GetDMINum workflow" sap:VirtualizedContainerService.HintSize="755,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="Cadence\Cadence_GetDMINum.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="ui:Browser" x:Key="in_CadenceBrwsr">[in_CadenceBrowser]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_ServiceLoanNumber">[DMINumber]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_SqlID">[SqlLoanId]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SQL_ProcessingUpdate workflow" sap:VirtualizedContainerService.HintSize="755,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="SQL\SQL_ProcessingUpdate.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_LoanID">[Cint(SqlLoanId)]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_ChildProcess">Nautilus Processing</InArgument>
        <InArgument x:TypeArguments="x:Boolean" x:Key="in_Success">True</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Reason">["File Path : "+DownloadedFilePath+", DMI Num : "+DMINumber+", First Name : "+FirstName+", Last Name : "+LastName]</InArgument>
        <InArgument x:TypeArguments="s:DateTime" x:Key="in_ProcessStartTime">[in_ProcessStartTime]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Comments">[String.Empty]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_CreatedBy">[in_HostName]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_ParentProcess">[in_Config("ProcessName").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_DbName">[in_Config("DbName").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_RequestedBy">[RequestedBy]</InArgument>
        <InArgument x:TypeArguments="s:DateTime" x:Key="in_RequestedDateTime">[Convert.ToDateTime(RequestedDateTime)]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Nautilus_Process workflow" sap:VirtualizedContainerService.HintSize="755,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="Nautilus\Nautilus_Process.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_FilePath">[DownloadedFilePath]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_LoanNum">[LoanNumber]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_DMINum">[DMINumber]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_FirstName">[FirstName]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_LastName">[LastName]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_HostName">[in_HostName]</InArgument>
        <InArgument x:TypeArguments="s:DateTime" x:Key="in_ProcessStartTime">[in_ProcessStartTime]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_RequestedDateTime">[RequestedDateTime]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_RequestedBy">[RequestedBy]</InArgument>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Sqlid">[SqlLoanId]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SQL_ProcessingUpdate workflow" sap:VirtualizedContainerService.HintSize="755,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="SQL\SQL_ProcessingUpdate.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_LoanID">[Cint(SqlLoanId)]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_ChildProcess">Successful</InArgument>
        <InArgument x:TypeArguments="x:Boolean" x:Key="in_Success">True</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Reason">["File : "+Path.GetFileName(DownloadedFilePath)+" exported from VLF and Uploaded to Nautilus"]</InArgument>
        <InArgument x:TypeArguments="s:DateTime" x:Key="in_ProcessStartTime">[in_ProcessStartTime]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Comments">[String.Empty]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_CreatedBy">[in_HostName]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_ParentProcess">[in_Config("ProcessName").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_DbName">[in_Config("DbName").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_RequestedBy">[RequestedBy]</InArgument>
        <InArgument x:TypeArguments="s:DateTime" x:Key="in_RequestedDateTime">[Convert.ToDateTime(RequestedDateTime)]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
  </Sequence>
</Activity>